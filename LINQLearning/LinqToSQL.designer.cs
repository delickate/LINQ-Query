#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LINQLearning
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="sani_usermanagement")]
	public partial class LinqToSQLDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertmodule(module instance);
    partial void Updatemodule(module instance);
    partial void Deletemodule(module instance);
    partial void Insertusers_role(users_role instance);
    partial void Updateusers_role(users_role instance);
    partial void Deleteusers_role(users_role instance);
    partial void Insertright(right instance);
    partial void Updateright(right instance);
    partial void Deleteright(right instance);
    partial void Insertrole(role instance);
    partial void Updaterole(role instance);
    partial void Deleterole(role instance);
    partial void Insertroles_modules_permission(roles_modules_permission instance);
    partial void Updateroles_modules_permission(roles_modules_permission instance);
    partial void Deleteroles_modules_permission(roles_modules_permission instance);
    partial void Insertroles_modules_permissions_right(roles_modules_permissions_right instance);
    partial void Updateroles_modules_permissions_right(roles_modules_permissions_right instance);
    partial void Deleteroles_modules_permissions_right(roles_modules_permissions_right instance);
    partial void Insertuser(user instance);
    partial void Updateuser(user instance);
    partial void Deleteuser(user instance);
    #endregion
		
		public LinqToSQLDataContext() : 
				base(global::LINQLearning.Properties.Settings.Default.sani_usermanagementConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public LinqToSQLDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LinqToSQLDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LinqToSQLDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LinqToSQLDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<module> modules
		{
			get
			{
				return this.GetTable<module>();
			}
		}
		
		public System.Data.Linq.Table<users_role> users_roles
		{
			get
			{
				return this.GetTable<users_role>();
			}
		}
		
		public System.Data.Linq.Table<right> rights
		{
			get
			{
				return this.GetTable<right>();
			}
		}
		
		public System.Data.Linq.Table<role> roles
		{
			get
			{
				return this.GetTable<role>();
			}
		}
		
		public System.Data.Linq.Table<roles_modules_permission> roles_modules_permissions
		{
			get
			{
				return this.GetTable<roles_modules_permission>();
			}
		}
		
		public System.Data.Linq.Table<roles_modules_permissions_right> roles_modules_permissions_rights
		{
			get
			{
				return this.GetTable<roles_modules_permissions_right>();
			}
		}
		
		public System.Data.Linq.Table<user> users
		{
			get
			{
				return this.GetTable<user>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.modules")]
	public partial class module : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _parent_id;
		
		private string _name;
		
		private string _url;
		
		private string _slug;
		
		private int _status;
		
		private bool _is_default;
		
		private int _sortid;
		
		private System.Nullable<System.DateTime> _created_at;
		
		private EntitySet<roles_modules_permission> _roles_modules_permissions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onparent_idChanging(int value);
    partial void Onparent_idChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnurlChanging(string value);
    partial void OnurlChanged();
    partial void OnslugChanging(string value);
    partial void OnslugChanged();
    partial void OnstatusChanging(int value);
    partial void OnstatusChanged();
    partial void Onis_defaultChanging(bool value);
    partial void Onis_defaultChanged();
    partial void OnsortidChanging(int value);
    partial void OnsortidChanged();
    partial void Oncreated_atChanging(System.Nullable<System.DateTime> value);
    partial void Oncreated_atChanged();
    #endregion
		
		public module()
		{
			this._roles_modules_permissions = new EntitySet<roles_modules_permission>(new Action<roles_modules_permission>(this.attach_roles_modules_permissions), new Action<roles_modules_permission>(this.detach_roles_modules_permissions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_parent_id", DbType="Int NOT NULL")]
		public int parent_id
		{
			get
			{
				return this._parent_id;
			}
			set
			{
				if ((this._parent_id != value))
				{
					this.Onparent_idChanging(value);
					this.SendPropertyChanging();
					this._parent_id = value;
					this.SendPropertyChanged("parent_id");
					this.Onparent_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_url", DbType="NVarChar(100)")]
		public string url
		{
			get
			{
				return this._url;
			}
			set
			{
				if ((this._url != value))
				{
					this.OnurlChanging(value);
					this.SendPropertyChanging();
					this._url = value;
					this.SendPropertyChanged("url");
					this.OnurlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_slug", DbType="NVarChar(50)")]
		public string slug
		{
			get
			{
				return this._slug;
			}
			set
			{
				if ((this._slug != value))
				{
					this.OnslugChanging(value);
					this.SendPropertyChanging();
					this._slug = value;
					this.SendPropertyChanged("slug");
					this.OnslugChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Int NOT NULL")]
		public int status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_is_default", DbType="Bit NOT NULL")]
		public bool is_default
		{
			get
			{
				return this._is_default;
			}
			set
			{
				if ((this._is_default != value))
				{
					this.Onis_defaultChanging(value);
					this.SendPropertyChanging();
					this._is_default = value;
					this.SendPropertyChanged("is_default");
					this.Onis_defaultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sortid", DbType="Int NOT NULL")]
		public int sortid
		{
			get
			{
				return this._sortid;
			}
			set
			{
				if ((this._sortid != value))
				{
					this.OnsortidChanging(value);
					this.SendPropertyChanging();
					this._sortid = value;
					this.SendPropertyChanged("sortid");
					this.OnsortidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created_at", DbType="DateTime")]
		public System.Nullable<System.DateTime> created_at
		{
			get
			{
				return this._created_at;
			}
			set
			{
				if ((this._created_at != value))
				{
					this.Oncreated_atChanging(value);
					this.SendPropertyChanging();
					this._created_at = value;
					this.SendPropertyChanged("created_at");
					this.Oncreated_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="module_roles_modules_permission", Storage="_roles_modules_permissions", ThisKey="id", OtherKey="module_id")]
		public EntitySet<roles_modules_permission> roles_modules_permissions
		{
			get
			{
				return this._roles_modules_permissions;
			}
			set
			{
				this._roles_modules_permissions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_roles_modules_permissions(roles_modules_permission entity)
		{
			this.SendPropertyChanging();
			entity.module = this;
		}
		
		private void detach_roles_modules_permissions(roles_modules_permission entity)
		{
			this.SendPropertyChanging();
			entity.module = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.users_roles")]
	public partial class users_role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _user_id;
		
		private int _role_id;
		
		private EntityRef<role> _role;
		
		private EntityRef<user> _user;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onuser_idChanging(int value);
    partial void Onuser_idChanged();
    partial void Onrole_idChanging(int value);
    partial void Onrole_idChanged();
    #endregion
		
		public users_role()
		{
			this._role = default(EntityRef<role>);
			this._user = default(EntityRef<user>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id", DbType="Int NOT NULL")]
		public int user_id
		{
			get
			{
				return this._user_id;
			}
			set
			{
				if ((this._user_id != value))
				{
					if (this._user.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onuser_idChanging(value);
					this.SendPropertyChanging();
					this._user_id = value;
					this.SendPropertyChanged("user_id");
					this.Onuser_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_role_id", DbType="Int NOT NULL")]
		public int role_id
		{
			get
			{
				return this._role_id;
			}
			set
			{
				if ((this._role_id != value))
				{
					if (this._role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onrole_idChanging(value);
					this.SendPropertyChanging();
					this._role_id = value;
					this.SendPropertyChanged("role_id");
					this.Onrole_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="role_users_role", Storage="_role", ThisKey="role_id", OtherKey="id", IsForeignKey=true)]
		public role role
		{
			get
			{
				return this._role.Entity;
			}
			set
			{
				role previousValue = this._role.Entity;
				if (((previousValue != value) 
							|| (this._role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._role.Entity = null;
						previousValue.users_roles.Remove(this);
					}
					this._role.Entity = value;
					if ((value != null))
					{
						value.users_roles.Add(this);
						this._role_id = value.id;
					}
					else
					{
						this._role_id = default(int);
					}
					this.SendPropertyChanged("role");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_users_role", Storage="_user", ThisKey="user_id", OtherKey="id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public user user
		{
			get
			{
				return this._user.Entity;
			}
			set
			{
				user previousValue = this._user.Entity;
				if (((previousValue != value) 
							|| (this._user.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._user.Entity = null;
						previousValue.users_roles.Remove(this);
					}
					this._user.Entity = value;
					if ((value != null))
					{
						value.users_roles.Add(this);
						this._user_id = value.id;
					}
					else
					{
						this._user_id = default(int);
					}
					this.SendPropertyChanged("user");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.rights")]
	public partial class right : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private EntitySet<roles_modules_permissions_right> _roles_modules_permissions_rights;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    #endregion
		
		public right()
		{
			this._roles_modules_permissions_rights = new EntitySet<roles_modules_permissions_right>(new Action<roles_modules_permissions_right>(this.attach_roles_modules_permissions_rights), new Action<roles_modules_permissions_right>(this.detach_roles_modules_permissions_rights));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="right_roles_modules_permissions_right", Storage="_roles_modules_permissions_rights", ThisKey="id", OtherKey="rights_id")]
		public EntitySet<roles_modules_permissions_right> roles_modules_permissions_rights
		{
			get
			{
				return this._roles_modules_permissions_rights;
			}
			set
			{
				this._roles_modules_permissions_rights.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_roles_modules_permissions_rights(roles_modules_permissions_right entity)
		{
			this.SendPropertyChanging();
			entity.right = this;
		}
		
		private void detach_roles_modules_permissions_rights(roles_modules_permissions_right entity)
		{
			this.SendPropertyChanging();
			entity.right = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.roles")]
	public partial class role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private bool _is_default;
		
		private bool _status;
		
		private EntitySet<users_role> _users_roles;
		
		private EntitySet<roles_modules_permission> _roles_modules_permissions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void Onis_defaultChanging(bool value);
    partial void Onis_defaultChanged();
    partial void OnstatusChanging(bool value);
    partial void OnstatusChanged();
    #endregion
		
		public role()
		{
			this._users_roles = new EntitySet<users_role>(new Action<users_role>(this.attach_users_roles), new Action<users_role>(this.detach_users_roles));
			this._roles_modules_permissions = new EntitySet<roles_modules_permission>(new Action<roles_modules_permission>(this.attach_roles_modules_permissions), new Action<roles_modules_permission>(this.detach_roles_modules_permissions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_is_default", DbType="Bit NOT NULL")]
		public bool is_default
		{
			get
			{
				return this._is_default;
			}
			set
			{
				if ((this._is_default != value))
				{
					this.Onis_defaultChanging(value);
					this.SendPropertyChanging();
					this._is_default = value;
					this.SendPropertyChanged("is_default");
					this.Onis_defaultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Bit NOT NULL")]
		public bool status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="role_users_role", Storage="_users_roles", ThisKey="id", OtherKey="role_id")]
		public EntitySet<users_role> users_roles
		{
			get
			{
				return this._users_roles;
			}
			set
			{
				this._users_roles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="role_roles_modules_permission", Storage="_roles_modules_permissions", ThisKey="id", OtherKey="role_id")]
		public EntitySet<roles_modules_permission> roles_modules_permissions
		{
			get
			{
				return this._roles_modules_permissions;
			}
			set
			{
				this._roles_modules_permissions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_users_roles(users_role entity)
		{
			this.SendPropertyChanging();
			entity.role = this;
		}
		
		private void detach_users_roles(users_role entity)
		{
			this.SendPropertyChanging();
			entity.role = null;
		}
		
		private void attach_roles_modules_permissions(roles_modules_permission entity)
		{
			this.SendPropertyChanging();
			entity.role = this;
		}
		
		private void detach_roles_modules_permissions(roles_modules_permission entity)
		{
			this.SendPropertyChanging();
			entity.role = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.roles_modules_permissions")]
	public partial class roles_modules_permission : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _module_id;
		
		private int _role_id;
		
		private bool _is_default;
		
		private EntitySet<roles_modules_permissions_right> _roles_modules_permissions_rights;
		
		private EntityRef<module> _module;
		
		private EntityRef<role> _role;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onmodule_idChanging(int value);
    partial void Onmodule_idChanged();
    partial void Onrole_idChanging(int value);
    partial void Onrole_idChanged();
    partial void Onis_defaultChanging(bool value);
    partial void Onis_defaultChanged();
    #endregion
		
		public roles_modules_permission()
		{
			this._roles_modules_permissions_rights = new EntitySet<roles_modules_permissions_right>(new Action<roles_modules_permissions_right>(this.attach_roles_modules_permissions_rights), new Action<roles_modules_permissions_right>(this.detach_roles_modules_permissions_rights));
			this._module = default(EntityRef<module>);
			this._role = default(EntityRef<role>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_module_id", DbType="Int NOT NULL")]
		public int module_id
		{
			get
			{
				return this._module_id;
			}
			set
			{
				if ((this._module_id != value))
				{
					if (this._module.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onmodule_idChanging(value);
					this.SendPropertyChanging();
					this._module_id = value;
					this.SendPropertyChanged("module_id");
					this.Onmodule_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_role_id", DbType="Int NOT NULL")]
		public int role_id
		{
			get
			{
				return this._role_id;
			}
			set
			{
				if ((this._role_id != value))
				{
					if (this._role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onrole_idChanging(value);
					this.SendPropertyChanging();
					this._role_id = value;
					this.SendPropertyChanged("role_id");
					this.Onrole_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_is_default", DbType="Bit NOT NULL")]
		public bool is_default
		{
			get
			{
				return this._is_default;
			}
			set
			{
				if ((this._is_default != value))
				{
					this.Onis_defaultChanging(value);
					this.SendPropertyChanging();
					this._is_default = value;
					this.SendPropertyChanged("is_default");
					this.Onis_defaultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="roles_modules_permission_roles_modules_permissions_right", Storage="_roles_modules_permissions_rights", ThisKey="id", OtherKey="roles_modules_permissions_id")]
		public EntitySet<roles_modules_permissions_right> roles_modules_permissions_rights
		{
			get
			{
				return this._roles_modules_permissions_rights;
			}
			set
			{
				this._roles_modules_permissions_rights.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="module_roles_modules_permission", Storage="_module", ThisKey="module_id", OtherKey="id", IsForeignKey=true)]
		public module module
		{
			get
			{
				return this._module.Entity;
			}
			set
			{
				module previousValue = this._module.Entity;
				if (((previousValue != value) 
							|| (this._module.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._module.Entity = null;
						previousValue.roles_modules_permissions.Remove(this);
					}
					this._module.Entity = value;
					if ((value != null))
					{
						value.roles_modules_permissions.Add(this);
						this._module_id = value.id;
					}
					else
					{
						this._module_id = default(int);
					}
					this.SendPropertyChanged("module");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="role_roles_modules_permission", Storage="_role", ThisKey="role_id", OtherKey="id", IsForeignKey=true)]
		public role role
		{
			get
			{
				return this._role.Entity;
			}
			set
			{
				role previousValue = this._role.Entity;
				if (((previousValue != value) 
							|| (this._role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._role.Entity = null;
						previousValue.roles_modules_permissions.Remove(this);
					}
					this._role.Entity = value;
					if ((value != null))
					{
						value.roles_modules_permissions.Add(this);
						this._role_id = value.id;
					}
					else
					{
						this._role_id = default(int);
					}
					this.SendPropertyChanged("role");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_roles_modules_permissions_rights(roles_modules_permissions_right entity)
		{
			this.SendPropertyChanging();
			entity.roles_modules_permission = this;
		}
		
		private void detach_roles_modules_permissions_rights(roles_modules_permissions_right entity)
		{
			this.SendPropertyChanging();
			entity.roles_modules_permission = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.roles_modules_permissions_rights")]
	public partial class roles_modules_permissions_right : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _roles_modules_permissions_id;
		
		private int _rights_id;
		
		private bool _is_default;
		
		private EntityRef<roles_modules_permission> _roles_modules_permission;
		
		private EntityRef<right> _right;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onroles_modules_permissions_idChanging(int value);
    partial void Onroles_modules_permissions_idChanged();
    partial void Onrights_idChanging(int value);
    partial void Onrights_idChanged();
    partial void Onis_defaultChanging(bool value);
    partial void Onis_defaultChanged();
    #endregion
		
		public roles_modules_permissions_right()
		{
			this._roles_modules_permission = default(EntityRef<roles_modules_permission>);
			this._right = default(EntityRef<right>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_roles_modules_permissions_id", DbType="Int NOT NULL")]
		public int roles_modules_permissions_id
		{
			get
			{
				return this._roles_modules_permissions_id;
			}
			set
			{
				if ((this._roles_modules_permissions_id != value))
				{
					if (this._roles_modules_permission.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onroles_modules_permissions_idChanging(value);
					this.SendPropertyChanging();
					this._roles_modules_permissions_id = value;
					this.SendPropertyChanged("roles_modules_permissions_id");
					this.Onroles_modules_permissions_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rights_id", DbType="Int NOT NULL")]
		public int rights_id
		{
			get
			{
				return this._rights_id;
			}
			set
			{
				if ((this._rights_id != value))
				{
					if (this._right.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onrights_idChanging(value);
					this.SendPropertyChanging();
					this._rights_id = value;
					this.SendPropertyChanged("rights_id");
					this.Onrights_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_is_default", DbType="Bit NOT NULL")]
		public bool is_default
		{
			get
			{
				return this._is_default;
			}
			set
			{
				if ((this._is_default != value))
				{
					this.Onis_defaultChanging(value);
					this.SendPropertyChanging();
					this._is_default = value;
					this.SendPropertyChanged("is_default");
					this.Onis_defaultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="roles_modules_permission_roles_modules_permissions_right", Storage="_roles_modules_permission", ThisKey="roles_modules_permissions_id", OtherKey="id", IsForeignKey=true)]
		public roles_modules_permission roles_modules_permission
		{
			get
			{
				return this._roles_modules_permission.Entity;
			}
			set
			{
				roles_modules_permission previousValue = this._roles_modules_permission.Entity;
				if (((previousValue != value) 
							|| (this._roles_modules_permission.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._roles_modules_permission.Entity = null;
						previousValue.roles_modules_permissions_rights.Remove(this);
					}
					this._roles_modules_permission.Entity = value;
					if ((value != null))
					{
						value.roles_modules_permissions_rights.Add(this);
						this._roles_modules_permissions_id = value.id;
					}
					else
					{
						this._roles_modules_permissions_id = default(int);
					}
					this.SendPropertyChanged("roles_modules_permission");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="right_roles_modules_permissions_right", Storage="_right", ThisKey="rights_id", OtherKey="id", IsForeignKey=true)]
		public right right
		{
			get
			{
				return this._right.Entity;
			}
			set
			{
				right previousValue = this._right.Entity;
				if (((previousValue != value) 
							|| (this._right.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._right.Entity = null;
						previousValue.roles_modules_permissions_rights.Remove(this);
					}
					this._right.Entity = value;
					if ((value != null))
					{
						value.roles_modules_permissions_rights.Add(this);
						this._rights_id = value.id;
					}
					else
					{
						this._rights_id = default(int);
					}
					this.SendPropertyChanged("right");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.users")]
	public partial class user : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private string _phone;
		
		private string _email;
		
		private string _picture;
		
		private System.Nullable<int> _gender_id;
		
		private System.Nullable<int> _education_id;
		
		private string _interests;
		
		private string _aboutme;
		
		private string _password;
		
		private bool _is_default;
		
		private int _status;
		
		private EntitySet<users_role> _users_roles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnphoneChanging(string value);
    partial void OnphoneChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnpictureChanging(string value);
    partial void OnpictureChanged();
    partial void Ongender_idChanging(System.Nullable<int> value);
    partial void Ongender_idChanged();
    partial void Oneducation_idChanging(System.Nullable<int> value);
    partial void Oneducation_idChanged();
    partial void OninterestsChanging(string value);
    partial void OninterestsChanged();
    partial void OnaboutmeChanging(string value);
    partial void OnaboutmeChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void Onis_defaultChanging(bool value);
    partial void Onis_defaultChanged();
    partial void OnstatusChanging(int value);
    partial void OnstatusChanged();
    #endregion
		
		public user()
		{
			this._users_roles = new EntitySet<users_role>(new Action<users_role>(this.attach_users_roles), new Action<users_role>(this.detach_users_roles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(100)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone", DbType="NVarChar(20)")]
		public string phone
		{
			get
			{
				return this._phone;
			}
			set
			{
				if ((this._phone != value))
				{
					this.OnphoneChanging(value);
					this.SendPropertyChanging();
					this._phone = value;
					this.SendPropertyChanged("phone");
					this.OnphoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="NVarChar(100)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_picture", DbType="NVarChar(255)")]
		public string picture
		{
			get
			{
				return this._picture;
			}
			set
			{
				if ((this._picture != value))
				{
					this.OnpictureChanging(value);
					this.SendPropertyChanging();
					this._picture = value;
					this.SendPropertyChanged("picture");
					this.OnpictureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gender_id", DbType="Int")]
		public System.Nullable<int> gender_id
		{
			get
			{
				return this._gender_id;
			}
			set
			{
				if ((this._gender_id != value))
				{
					this.Ongender_idChanging(value);
					this.SendPropertyChanging();
					this._gender_id = value;
					this.SendPropertyChanged("gender_id");
					this.Ongender_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_education_id", DbType="Int")]
		public System.Nullable<int> education_id
		{
			get
			{
				return this._education_id;
			}
			set
			{
				if ((this._education_id != value))
				{
					this.Oneducation_idChanging(value);
					this.SendPropertyChanging();
					this._education_id = value;
					this.SendPropertyChanged("education_id");
					this.Oneducation_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_interests", DbType="NVarChar(MAX)")]
		public string interests
		{
			get
			{
				return this._interests;
			}
			set
			{
				if ((this._interests != value))
				{
					this.OninterestsChanging(value);
					this.SendPropertyChanging();
					this._interests = value;
					this.SendPropertyChanged("interests");
					this.OninterestsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_aboutme", DbType="NVarChar(MAX)")]
		public string aboutme
		{
			get
			{
				return this._aboutme;
			}
			set
			{
				if ((this._aboutme != value))
				{
					this.OnaboutmeChanging(value);
					this.SendPropertyChanging();
					this._aboutme = value;
					this.SendPropertyChanged("aboutme");
					this.OnaboutmeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="NVarChar(255)")]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_is_default", DbType="Bit NOT NULL")]
		public bool is_default
		{
			get
			{
				return this._is_default;
			}
			set
			{
				if ((this._is_default != value))
				{
					this.Onis_defaultChanging(value);
					this.SendPropertyChanging();
					this._is_default = value;
					this.SendPropertyChanged("is_default");
					this.Onis_defaultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Int NOT NULL")]
		public int status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_users_role", Storage="_users_roles", ThisKey="id", OtherKey="user_id")]
		public EntitySet<users_role> users_roles
		{
			get
			{
				return this._users_roles;
			}
			set
			{
				this._users_roles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_users_roles(users_role entity)
		{
			this.SendPropertyChanging();
			entity.user = this;
		}
		
		private void detach_users_roles(users_role entity)
		{
			this.SendPropertyChanging();
			entity.user = null;
		}
	}
}
#pragma warning restore 1591
